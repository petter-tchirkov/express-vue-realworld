generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  email        String         @unique
  username     String         @id
  password     String
  bio          String?
  image        String?
  follows      User[]         @relation("UserFollows")
  followedBy   User[]         @relation("UserFollows")
  authored     Article[]      @relation("Author")
  favorites    Article[]      @relation("Favorites")
  comment      Comment[]      @relation("Author")
  RefreshToken RefreshToken[]
}

model RefreshToken {
  id          String   @id @unique @default(uuid())
  hashedToken String   @unique
  username    String
  User        User     @relation(fields: [username], references: [username], onDelete: Cascade)
  revoked     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  expireAt    DateTime
}

model Article {
  title          String    @unique
  slug           String    @id
  description    String
  body           String
  tagList        Tag[]
  author         User      @relation("Author", fields: [authorUsername], references: [username], onDelete: Cascade)
  authorUsername String
  favoritedBy    User[]    @relation("Favorites")
  comments       Comment[] @relation("Comments")
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @default(now())
}

model Comment {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now())
  body           String
  author         User     @relation("Author", fields: [authorUsername], references: [username], onDelete: Cascade)
  authorUsername String
  Article        Article  @relation("Comments", fields: [articleSlug], references: [slug], onDelete: Cascade)
  articleSlug    String
}

model Tag {
  tagName String    @id
  article Article[]
}
